{"ast":null,"code":"var _jsxFileName = \"D:\\\\React JS\\\\Projects\\\\Warehouse Management\\\\frontend\\\\src\\\\pages\\\\ResultPage\\\\ResultPage.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { Box, Container, Grid, Typography } from '@mui/material';\nimport { useTranslation } from 'react-i18next';\nimport { useLocation } from 'react-router-dom';\nimport { ResultCard, ResultSkelton, EmptyCard } from '../../components';\nimport { useNavigate } from 'react-router-dom';\nimport { fetchData, getDate, isNullOrEmpty, submitForm } from '../../functions';\nimport { getScanDataURL } from '../../api';\nimport \"./ResultPage.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst width = window.innerWidth;\nconst height = (width <= 479 ? window.innerHeight - 175 : window.innerHeight - 215) + \"px\";\nconst ResultPage = () => {\n  _s();\n  ////// Basic Data\n  const [data, setData] = useState(null);\n  const [isEmpty, setIsEmpty] = useState(false);\n\n  ////// Navigate\n  const navigate = useNavigate();\n\n  ////// Translate\n  const {\n    t\n  } = useTranslation();\n\n  ////// Get Data From Homepage\n  const location = useLocation();\n  const {\n    plantCode,\n    locCode,\n    locName,\n    whCode\n  } = location === null || location === void 0 ? void 0 : location.state;\n\n  ///// Handle Download\n  const fetchDownload = async () => {\n    await submitForm(true);\n    const result = await fetchData(getScanDataURL, {\n      V_P_SCAN: \"Q_WH\",\n      V_P_TYPE: \"\",\n      V_P_PLANT_CD: plantCode,\n      V_P_WH_CD: whCode,\n      V_P_PART_GROUP: \"ALL\",\n      V_P_PART_CD: \"\",\n      V_P_YMD: getDate(),\n      V_P_LOC_WH: locCode,\n      V_P_USER: \"\",\n      V_P_IP: \"\",\n      OUT_CURSOR: \"\"\n    });\n    if (result) {\n      if (result.length > 1) {\n        result.shift();\n        setData(prevData => result);\n      } else {\n        setData(prevData => null);\n      }\n    } else {\n      setData(prevData => null);\n    }\n  };\n  useEffect(() => {\n    if ((location === null || location === void 0 ? void 0 : location.state) === null) {\n      navigate(\"/\", {\n        replace: true\n      });\n    } else if (isNullOrEmpty(plantCode) || isNullOrEmpty(locCode) || isNullOrEmpty(locName) || isNullOrEmpty(whCode)) {\n      navigate(\"/\", {\n        replace: true\n      });\n    } else {\n      fetchDownload();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      className: \"s-home-5\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        className: \"s-home-content\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            className: \"s-form-content\",\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                width: \"100%\",\n                minHeight: height\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                className: \"b-card-3\",\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  className: \"b-title\",\n                  children: locName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  className: \"b-desc\",\n                  children: t('wh_result_desc')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(EmptyCard, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(ResultPage, \"SP66FrWqpTVUEI6b/avWHHU24kY=\", false, function () {\n  return [useNavigate, useTranslation, useLocation];\n});\n_c = ResultPage;\nexport default ResultPage;\nvar _c;\n$RefreshReg$(_c, \"ResultPage\");","map":{"version":3,"names":["useState","useEffect","Box","Container","Grid","Typography","useTranslation","useLocation","ResultCard","ResultSkelton","EmptyCard","useNavigate","fetchData","getDate","isNullOrEmpty","submitForm","getScanDataURL","jsxDEV","_jsxDEV","Fragment","_Fragment","width","window","innerWidth","height","innerHeight","ResultPage","_s","data","setData","isEmpty","setIsEmpty","navigate","t","location","plantCode","locCode","locName","whCode","state","fetchDownload","result","V_P_SCAN","V_P_TYPE","V_P_PLANT_CD","V_P_WH_CD","V_P_PART_GROUP","V_P_PART_CD","V_P_YMD","V_P_LOC_WH","V_P_USER","V_P_IP","OUT_CURSOR","length","shift","prevData","replace","children","className","sx","minHeight","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/React JS/Projects/Warehouse Management/frontend/src/pages/ResultPage/ResultPage.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { Box, Container, Grid, Typography } from '@mui/material';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { ResultCard, ResultSkelton, EmptyCard } from '../../components';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { fetchData, getDate, isNullOrEmpty, submitForm } from '../../functions';\r\nimport { getScanDataURL } from '../../api';\r\n\r\nimport \"./ResultPage.scss\";\r\n\r\nconst width = window.innerWidth;\r\nconst height = (width <= 479 ? window.innerHeight - 175 : window.innerHeight - 215) + \"px\";\r\n\r\nconst ResultPage = () => {\r\n\r\n    ////// Basic Data\r\n    const [data, setData] = useState(null);\r\n    const [isEmpty, setIsEmpty] = useState(false);\r\n\r\n    ////// Navigate\r\n    const navigate = useNavigate();\r\n\r\n    ////// Translate\r\n    const { t } = useTranslation();\r\n\r\n    ////// Get Data From Homepage\r\n    const location = useLocation();\r\n    const { plantCode, locCode, locName, whCode } = location?.state;\r\n\r\n    ///// Handle Download\r\n    const fetchDownload = async() => {\r\n        await submitForm(true);\r\n\r\n        const result = await fetchData(getScanDataURL, {\r\n            V_P_SCAN        :\"Q_WH\",\r\n            V_P_TYPE        : \"\",\r\n            V_P_PLANT_CD    : plantCode,\r\n            V_P_WH_CD \t    : whCode,\r\n            V_P_PART_GROUP  : \"ALL\",\r\n            V_P_PART_CD\t    : \"\",\r\n            V_P_YMD\t\t\t: getDate(),\r\n            V_P_LOC_WH      : locCode,\r\n            V_P_USER \t    : \"\",\r\n            V_P_IP          : \"\",\r\n            OUT_CURSOR      : \"\" \r\n        });\r\n\r\n        if(result){\r\n            if(result.length > 1){\r\n                result.shift();\r\n                setData(prevData => result);\r\n            }else{\r\n                setData(prevData => null);\r\n            }\r\n        }else{\r\n            setData(prevData => null);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(location?.state === null){\r\n            navigate(\"/\", {replace: true});\r\n        } \r\n        else if(isNullOrEmpty(plantCode) || isNullOrEmpty(locCode) || isNullOrEmpty(locName) || isNullOrEmpty(whCode)){\r\n            navigate(\"/\", {replace: true});\r\n        }\r\n        else{\r\n            fetchDownload();\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[]);\r\n\r\n    return (\r\n        <>\r\n            <Box className=\"s-home-5\">\r\n                <Box className=\"s-home-content\">\r\n                    <Container>\r\n                        <Box className=\"s-form-content\">\r\n                            <Box sx={{ width: \"100%\", minHeight: height, }}>\r\n                                <Box className=\"b-card-3\">\r\n                                    <Typography className=\"b-title\">{locName}</Typography>\r\n                                    <Typography className=\"b-desc\">{t('wh_result_desc')}</Typography>\r\n                                </Box>\r\n                                {/* <Grid container spacing={1.5} className=\"s-list\">\r\n                                    {data !== null && data?.length > 0 && data.map((item, index) => {\r\n                                        return (\r\n                                            <Grid key={index} item xs={12} sm={6} className=\"s-list_item\">\r\n                                                <ResultCard \r\n                                                    order={item.STT}\r\n                                                    title={item.PART_GROUP}\r\n                                                    desc={item.PART}\r\n                                                    status={item.ORDER_PART.toUpperCase()}\r\n                                                    safeQty={item.SAFETY_INV}\r\n                                                    stockQty={item.STOCK_QTY} />\r\n                                            </Grid>\r\n                                        );\r\n                                    })}\r\n                                    {data == null && \r\n                                        <>\r\n                                            <Grid item xs={12} sm={6}>\r\n                                                <ResultSkelton />\r\n                                            </Grid>\r\n                                            <Grid item xs={12} sm={6}>\r\n                                                <ResultSkelton />\r\n                                            </Grid>\r\n                                            <Grid item xs={12} sm={6}>\r\n                                                <ResultSkelton />\r\n                                            </Grid>\r\n                                            <Grid item xs={12} sm={6}>\r\n                                                <ResultSkelton />\r\n                                            </Grid>\r\n                                        </>\r\n                                    }\r\n                                </Grid> */}\r\n                                <EmptyCard />\r\n                            </Box>\r\n                        </Box>\r\n                    </Container>\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ResultPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}