{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  openNotice: false,\n  typeNotice: \"success\",\n  openLoad: false,\n  lang: \"en\",\n  scanStatus: false\n};\nconst commonSlice = createSlice({\n  name: 'common',\n  initialState,\n  reducers: {\n    openNotice: state => {\n      state.openNotice = true;\n    },\n    closeNotice: state => {\n      state.openNotice = false;\n    },\n    openLoad: state => {\n      state.openLoad = true;\n    },\n    closeLoad: state => {\n      state.openLoad = false;\n    },\n    setTypeNotice: (state, action) => {\n      state.typeNotice = action.payload;\n    },\n    setLang: (state, action) => {\n      state.lang = action.payload;\n    },\n    setScanStatus: (state, action) => {\n      state.scanStatus = action.payload;\n    }\n  }\n});\nexport const commonAction = commonSlice.actions;\nexport default commonSlice;","map":{"version":3,"names":["createSlice","initialState","openNotice","typeNotice","openLoad","lang","scanStatus","commonSlice","name","reducers","state","closeNotice","closeLoad","setTypeNotice","action","payload","setLang","setScanStatus","commonAction","actions"],"sources":["D:/React JS/Projects/Warehouse Management/frontend/src/redux/commonSlice.jsx"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n    openNotice: false,\r\n    typeNotice: \"success\",\r\n    openLoad: false,\r\n    lang: \"en\",\r\n    scanStatus: false,\r\n};\r\n\r\nconst commonSlice = createSlice({\r\n    name: 'common',\r\n    initialState,\r\n    reducers: {\r\n        openNotice: (state) => {\r\n            state.openNotice = true;\r\n        },\r\n        closeNotice: (state) => {\r\n            state.openNotice = false;\r\n        },\r\n        openLoad: (state) => {\r\n            state.openLoad = true;\r\n        },\r\n        closeLoad: (state) => {\r\n            state.openLoad = false;\r\n        },\r\n        setTypeNotice: (state, action) => {\r\n            state.typeNotice = action.payload;\r\n        },\r\n        setLang: (state, action) => {\r\n            state.lang = action.payload;\r\n        },\r\n        setScanStatus: (state, action) => {\r\n            state.scanStatus = action.payload;\r\n        },\r\n    }\r\n});\r\n\r\nexport const commonAction = commonSlice.actions;\r\nexport default commonSlice;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACjBC,UAAU,EAAE,KAAK;EACjBC,UAAU,EAAE,SAAS;EACrBC,QAAQ,EAAE,KAAK;EACfC,IAAI,EAAE,IAAI;EACVC,UAAU,EAAE;AAChB,CAAC;AAED,MAAMC,WAAW,GAAGP,WAAW,CAAC;EAC5BQ,IAAI,EAAE,QAAQ;EACdP,YAAY;EACZQ,QAAQ,EAAE;IACNP,UAAU,EAAGQ,KAAK,IAAK;MACnBA,KAAK,CAACR,UAAU,GAAG,IAAI;IAC3B,CAAC;IACDS,WAAW,EAAGD,KAAK,IAAK;MACpBA,KAAK,CAACR,UAAU,GAAG,KAAK;IAC5B,CAAC;IACDE,QAAQ,EAAGM,KAAK,IAAK;MACjBA,KAAK,CAACN,QAAQ,GAAG,IAAI;IACzB,CAAC;IACDQ,SAAS,EAAGF,KAAK,IAAK;MAClBA,KAAK,CAACN,QAAQ,GAAG,KAAK;IAC1B,CAAC;IACDS,aAAa,EAAEA,CAACH,KAAK,EAAEI,MAAM,KAAK;MAC9BJ,KAAK,CAACP,UAAU,GAAGW,MAAM,CAACC,OAAO;IACrC,CAAC;IACDC,OAAO,EAAEA,CAACN,KAAK,EAAEI,MAAM,KAAK;MACxBJ,KAAK,CAACL,IAAI,GAAGS,MAAM,CAACC,OAAO;IAC/B,CAAC;IACDE,aAAa,EAAEA,CAACP,KAAK,EAAEI,MAAM,KAAK;MAC9BJ,KAAK,CAACJ,UAAU,GAAGQ,MAAM,CAACC,OAAO;IACrC;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMG,YAAY,GAAGX,WAAW,CAACY,OAAO;AAC/C,eAAeZ,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}