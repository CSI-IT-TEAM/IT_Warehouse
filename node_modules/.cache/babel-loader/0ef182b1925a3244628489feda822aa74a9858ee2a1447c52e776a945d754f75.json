{"ast":null,"code":"export const isNullOrEmpty = value => {\n  if (value === null || value === \"\") {\n    return true;\n  } else {\n    return false;\n  }\n};\nexport const getDate = () => {\n  let date = new Date();\n  let month = date.getMonth() + 1;\n  let day = date.getDate();\n  let ymd = date.getFullYear().toString() + ((month > 9 ? '' : '0') + month).toString() + ((day > 9 ? '' : '0') + day).toString();\n  return ymd;\n};\nexport const getDateFormat = date => {\n  if (isNullOrEmpty(date)) return \"\";\n  return date.replace(/(\\d{4})(\\d{2})(\\d{2})/g, '$1-$2-$3');\n};\n\n//////// Get Image Base-64\nexport const arrayBufferToBase64 = buffer => {\n  var base64Flag = 'data:image/jpeg;base64,';\n  var binary = '';\n  var bytes = [].slice.call(new Uint8Array(buffer));\n  bytes.forEach(b => binary += String.fromCharCode(b));\n  return base64Flag + window.btoa(binary);\n};\nexport const formatUserName = name => {\n  const arr = name.split(' ');\n  return arr[arr.length - 2].trim() + ' ' + arr[arr.length - 1].trim();\n};\n\n//////Cancel Fetch API After Timeout\nconst Timeout = time => {\n  let controller = new AbortController();\n  setTimeout(() => controller.abort(), time * 1000);\n  return controller;\n};\n_c = Timeout;\nexport const fetchData = async (url, dataConfig) => {\n  try {\n    const response = await fetch(url, {\n      method: 'POST',\n      mode: 'cors',\n      dataType: \"json\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(dataConfig),\n      signal: Timeout(5).signal\n    });\n    if (response.ok) {\n      const json = await response.json();\n      return json;\n    } else {\n      return false;\n    }\n  } catch (error) {\n    return false;\n  }\n};\nexport const submitForm = result => {\n  // Pretend it's hitting the network.\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (result) {\n        resolve();\n      } else {\n        reject();\n      }\n    }, 1500);\n  });\n};\nvar _c;\n$RefreshReg$(_c, \"Timeout\");","map":{"version":3,"names":["isNullOrEmpty","value","getDate","date","Date","month","getMonth","day","ymd","getFullYear","toString","getDateFormat","replace","arrayBufferToBase64","buffer","base64Flag","binary","bytes","slice","call","Uint8Array","forEach","b","String","fromCharCode","window","btoa","formatUserName","name","arr","split","length","trim","Timeout","time","controller","AbortController","setTimeout","abort","_c","fetchData","url","dataConfig","response","fetch","method","mode","dataType","headers","body","JSON","stringify","signal","ok","json","error","submitForm","result","Promise","resolve","reject","$RefreshReg$"],"sources":["D:/React JS/Projects/Warehouse Management/frontend/src/functions/index.jsx"],"sourcesContent":["export const isNullOrEmpty = (value) => {\r\n    if(value === null || value === \"\"){\r\n        return true;\r\n    }else{\r\n        return false;\r\n    }\r\n}\r\n\r\nexport const getDate = () => {\r\n    let date = new Date();\r\n    let month = date.getMonth() + 1;\r\n    let day = date.getDate();\r\n    let ymd = date.getFullYear().toString() + ((month > 9 ? '' : '0') + month).toString() + ((day > 9 ? '' : '0') + day).toString();\r\n\r\n    return ymd;\r\n}\r\n\r\nexport const getDateFormat = (date) => {\r\n    if(isNullOrEmpty(date)) return \"\";\r\n    return date.replace(/(\\d{4})(\\d{2})(\\d{2})/g, '$1-$2-$3');\r\n}\r\n\r\n//////// Get Image Base-64\r\nexport const arrayBufferToBase64 = (buffer) => {\r\n    var base64Flag = 'data:image/jpeg;base64,';\r\n    var binary = '';\r\n    var bytes = [].slice.call(new Uint8Array(buffer));\r\n    bytes.forEach((b) => binary += String.fromCharCode(b));\r\n    \r\n    return base64Flag + window.btoa(binary);\r\n};\r\n\r\nexport const formatUserName = (name) => {\r\n    const arr = name.split(' ');\r\n    return arr[arr.length - 2].trim() + ' ' + arr[arr.length - 1].trim();\r\n}\r\n\r\n//////Cancel Fetch API After Timeout\r\nconst Timeout = (time) => {\r\n    let controller = new AbortController();\r\n    setTimeout(() => controller.abort(), time * 1000);\r\n    return controller;\r\n};\r\n\r\nexport const fetchData = async (url, dataConfig) => {\r\n    try {\r\n        const response = await fetch(url, {\r\n                    method: 'POST',\r\n                    mode: 'cors',\r\n                    dataType: \"json\",\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify(dataConfig),\r\n                    signal: Timeout(5).signal,\r\n                });\r\n\r\n        if(response.ok){\r\n            const json = await response.json();\r\n            return json;\r\n        }\r\n        else{\r\n            return false;\r\n        }\r\n    } catch (error) {\r\n        return false;\r\n    }\r\n};\r\n\r\nexport const submitForm = (result) => {\r\n    // Pretend it's hitting the network.\r\n    return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n            if (result) {\r\n                resolve();\r\n            } else {\r\n                reject();\r\n            }\r\n        }, 1500);\r\n    });\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}